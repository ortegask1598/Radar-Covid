{"version":3,"sources":["AppNavbar.js","Home.js","TFGList.js","TFGEdit.js","ContactoList.js","ContactoEdit.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","props","state","isOpen","toggle","bind","this","setState","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","Component","Home","Container","fluid","Button","TFGList","usuarios","remove","fetch","then","response","json","data","id","a","method","headers","updatedusuarios","filter","i","usuarioList","map","usuario","style","whiteSpace","email","contrase√±a","positivo","contactos","ButtonGroup","size","onClick","className","Table","width","TFGEdit","emptyItem","item","handleChange","handleSubmit","match","params","event","target","value","name","preventDefault","body","JSON","stringify","history","push","title","Form","onSubmit","FormGroup","Label","for","Input","type","onChange","autoComplete","withRouter","ContactoList","contacto_estrecho","updatedcontactos","contactosList","id_usu1","id_usu2","duracion","caducidad","ContactoEdit","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d25c78d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class AppNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isOpen: false};\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\r\n        </Navbar>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <Button color=\"link\"><Link to=\"/usuarios\">Usuarios</Link></Button>\r\n                </Container>\r\n                <Container fluid>\r\n                    <Button color=\"link\"><Link to=\"/contactos\">Contactos</Link></Button>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TFGList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {usuarios: []};\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/usuarios')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({usuarios: data}));\r\n    }\r\n\r\n    async remove(id) {\r\n        await fetch(`/usuarios/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedusuarios = [...this.state.usuarios].filter(i => i.id !== id);\r\n            this.setState({usuarios: updatedusuarios});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {usuarios} = this.state;\r\n\r\n        const usuarioList = usuarios.map(usuario => {\r\n            return <tr key={usuario.id}>\r\n                <td style={{whiteSpace: 'nowrap'}}>{usuario.email}</td>\r\n                <td>{usuario.contrase√±a}</td>\r\n                <td>{usuario.positivo}</td>\r\n                <td>{usuario.contactos}</td>\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/usuarios/\" + usuario.id}>Edit</Button>\r\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(usuario.id)}>Delete</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Button color=\"success\" tag={Link} to=\"/usuarios/new\">Add User</Button>\r\n                    </div>\r\n                    <h3>Users</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"15%\">Id</th>\r\n                            <th width=\"15%\">Email</th>\r\n                            <th width=\"15%\">Contrase√±a</th>\r\n                            <th width=\"15%\">Positivo</th>\r\n                            <th width=\"10%\">Contactos</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {usuarioList}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TFGList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nclass TFGEdit extends Component {\r\n\r\n    emptyItem = {\r\n        id: '',\r\n        email: '',\r\n        contrase√±a: '',\r\n        positivo: false,\r\n        contactos: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: this.emptyItem\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match.params.id !== 'new') { // \r\n            const usuario = await (await fetch(`/usuarios/${this.props.match.params.id}`)).json();\r\n            this.setState({item: usuario});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let item = {...this.state.item};\r\n        item[name] = value;\r\n        this.setState({item});\r\n    }\r\n\r\nasync handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    await fetch('/usuarios' + ((this.props.match.params.id !== 'new') ? '/' + item.id : ''), {\r\n        method: (this.props.match.params.id !== 'new') ? 'PUT' : 'POST', //(item.email) ? 'PUT' : 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/usuarios');\r\n}\r\n\r\n    render() {\r\n        const {item} = this.state;\r\n        const title = <h2>{item.id ? 'Edit user' : 'Add user'}</h2>;\r\n\r\n        return <div>\r\n            <AppNavbar/>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"id\">Id</Label>\r\n                        <Input type=\"text\" name=\"id\" id=\"id\" value={item.id || ''}\r\n                               onChange={this.handleChange} autoComplete=\"id\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\r\n                               onChange={this.handleChange} autoComplete=\"email\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"contrase√±a\">Contrase√±a</Label>\r\n                        <Input type=\"text\" name=\"contrase√±a\" id=\"contrase√±a\" value={item.contrase√±a || ''}\r\n                               onChange={this.handleChange} autoComplete=\"contrase√±a\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"positivo\">Positivo</Label>\r\n                        <Input type=\"text\" name=\"positivo\" id=\"positivo\" value={item.positivo || ''}\r\n                               onChange={this.handleChange} autoComplete=\"positivo\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"contactos\">Contactos</Label>\r\n                        <Input type=\"text\" name=\"contactos\" id=\"contactos\" value={item.contactos || ''}\r\n                               onChange={this.handleChange} autoComplete=\"contactos\"/>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">Guardar</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/usuarios\">Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(TFGEdit);","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ContactoList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {contacto_estrecho: []};\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/contactos')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({contacto_estrecho: data}));\r\n    }\r\n\r\n    async remove(id) {\r\n        await fetch(`/contactos/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedcontactos = [...this.state.contacto_estrecho].filter(i => i.id !== id);\r\n            this.setState({contacto_estrecho: updatedcontactos});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {contacto_estrecho} = this.state;\r\n\r\n        const  contactosList = contacto_estrecho.map(contacto_estrecho => {\r\n            return <tr key={contacto_estrecho.id}>\r\n                <td style={{whiteSpace: 'nowrap'}}>{contacto_estrecho.id}</td>\r\n                <td>{contacto_estrecho.id_usu1}</td>\r\n                <td>{contacto_estrecho.id_usu2}</td>\r\n                <td>{contacto_estrecho.duracion}</td>\r\n                <td>{contacto_estrecho.caducidad}</td>\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/contactos/\" + contacto_estrecho.id}>Edit</Button>\r\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(contacto_estrecho.id)}>Delete</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Button color=\"success\" tag={Link} to=\"/contactos/new\">Add Contact</Button>\r\n                    </div>\r\n                    <h3>Contactos</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"15%\">Id</th>\r\n                            <th width=\"15%\">Id Usuario 1</th>\r\n                            <th width=\"15%\">Id Usuario 1</th>\r\n                            <th width=\"15%\">Duraci√≥n</th>\r\n                            <th width=\"10%\">Fecha Caducidad</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {contactosList}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactoList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nclass ContactoEdit extends Component {\r\n\r\n    emptyItem = {\r\n        id: '',\r\n        id_usu1: '',\r\n        id_usu2: '',\r\n        duracion: '',\r\n        caducidad: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: this.emptyItem\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match.params.id !== 'new') { // \r\n            const contacto_estrecho = await (await fetch(`/contactos/${this.props.match.params.id}`)).json();\r\n            this.setState({item: contacto_estrecho});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let item = {...this.state.item};\r\n        item[name] = value;\r\n        this.setState({item});\r\n    }\r\n\r\nasync handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    await fetch('/contactos' + ((this.props.match.params.id !== 'new') ? '/' + item.id : ''), {\r\n        method: (this.props.match.params.id !== 'new') ? 'PUT' : 'POST', //(item.email) ? 'PUT' : 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/contactos');\r\n}\r\n\r\n    render() {\r\n        const {item} = this.state;\r\n        const title = <h2>{item.id ? 'Edit contacto' : 'Add contact'}</h2>;\r\n\r\n        return <div>\r\n            <AppNavbar/>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"id1\">Id</Label>\r\n                        <Input type=\"text\" name=\"id1\" id=\"id1\" value={item.id || ''}\r\n                               onChange={this.handleChange} autoComplete=\"id1\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"id_usu1\">Id Usuario 1</Label>\r\n                        <Input type=\"text\" name=\"id_usu1\" id=\"id_usu1\" value={item.id_usu1 || ''}\r\n                               onChange={this.handleChange} autoComplete=\"id_usu1\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"id_usu2\">Id Usuario 2</Label>\r\n                        <Input type=\"text\" name=\"id_usu2\" id=\"id_usu2\" value={item.id_usu2 || ''}\r\n                               onChange={this.handleChange} autoComplete=\"id_usu2\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"duracion\">Duraci√≥n en Contacto</Label>\r\n                        <Input type=\"text\" name=\"duracion\" id=\"duracion\" value={item.duracion || ''}\r\n                               onChange={this.handleChange} autoComplete=\"duracion\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"caducidad\">Caducidad del Contacto</Label>\r\n                        <Input type=\"text\" name=\"caducidad\" id=\"caducidad\" value={item.caducidad || ''}\r\n                               onChange={this.handleChange} autoComplete=\"caducidad\"/>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/contactos\">Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(ContactoEdit);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport TFGList from './TFGList';\r\nimport TFGEdit from \"./TFGEdit\";\r\nimport ContactoList from './ContactoList';\r\nimport ContactoEdit from \"./ContactoEdit\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/' exact={true} component={Home}/>\r\n            <Route path='/usuarios' exact={true} component={TFGList}/>\r\n            <Route path='/usuarios/:id' component={TFGEdit}/>\r\n            <Route path='/contactos'exact={true} component={ContactoList}/>\r\n            <Route path='/contactos/:id' component={ContactoEdit}/>\r\n          </Switch>\r\n        </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}